// https://github.com/cpietsch/sharpsheet v0.0.8 Copyright 2023 Christopher Pietsch
"use strict";var e=require("fs"),t=require("sharp"),i=require("path"),o=require("glob"),a=require("@mapbox/shelf-pack");function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=s(e),r=s(t),l=s(i),p=s(o),c=s(a);const h=(e,t)=>Array.from({length:Math.ceil(e.length/t)},(i,o)=>e.slice(o*t,o*t+t)),u=(e,t,i)=>`sprite-${e}-${t}.${i}`;module.exports=async function(e,t,i){const o=i.mapSprites||!1,a=i.border||1,s=i.sheetDimension||1024,f=i.outputFormat||"png",d=i.outputQuality||100,g=i.outputFilename||"sprite@2x",m=i.compositeChunkSize||100,w=i.sheetBackground||{r:0,g:0,b:0,alpha:0};let y=[],b=[],k=[],x=[];if("string"==typeof e?x=e.startsWith("[")&&e.endsWith("]")?JSON.parse(e.replace(/'/g,'"')):p.default.sync(e):Array.isArray(e)&&(x=e),!x.length)return void console.error("no images found");const S=function(e){n.default.existsSync(e)||n.default.mkdirSync(e,{recursive:!0});return e}(t);console.log("found",x.length,"files"),console.log("loading metadata");for(const e in x){const t=x[e],i=l.default.parse(t).name;try{const o=await r.default(t).metadata();y.push({id:+e,w:o.width+2*a,h:o.height+2*a}),b.push(t),k.push(i)}catch(e){console.error(e,t),console.log("skipping file")}}console.log("bin packing"),y.sort((e,t)=>t.h-e.h);let q=y.map(e=>e),v=[];for(;0!==q.length;){let e=new c.default(s,s).pack(q);v.push(e),q=q.filter(t=>!e.find(e=>e.id===t.id))}const F=v.map(e=>e.map(e=>({name:k[e.id],input:b[e.id],left:e.x+a,top:e.y+a,width:e.w-2*a,height:e.h-2*a})));console.log("creating spritesheets",F.length),await Promise.all(F.map(async(e,t)=>{console.log("composing spritesheet",t);const i={width:s,height:s,channels:4,background:w};let o=await r.default({create:i}).raw().toBuffer();const a=h(e,m);for(let e of a)console.log("composing sprites",m*t),o=await r.default(o,{raw:i}).composite(e).raw().toBuffer();const n=`${g}.${f}`;return{composite:e,fileName:n,fileMeta:await r.default(o,{raw:i}).toFormat(f,{quality:d}).toFile(S+"/"+n)}}));const $={meta:{type:"sharpsheet",version:"1",app:"https://github.com/cpietsch/sharpsheet"},spritesheets:F.map((e,t)=>({image:u(s,t,f),sprites:e.map(({left:e,top:t,width:i,height:o,name:a})=>({name:a,position:{x:e,y:t},dimension:{w:i,h:o}}))}))},j=F.flat().reduce((e,{left:t,top:i,width:o,height:a,name:s})=>Object.assign(e,{[s]:{pixelRatio:1,height:a,width:o,x:t,y:i}}),{});n.default.writeFileSync(S+"/"+g+".json",JSON.stringify(o?j:$,null,2))};
